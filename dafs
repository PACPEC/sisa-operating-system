
kernel:     file format elf32-sisa

Disassembly of section .usercode:

00000000 <printu>:
#include "wrappers.h"

char *vga = (char *)0xA000;

void printu(char *str) {
   0:	2ffa 	addi	r7, r7, -6
   2:	4bc2 	st	4(r7), r5
   4:	4dc1 	st	2(r7), r6
   6:	2dc2 	addi	r6, r7, 2
   8:	45c0 	st	0(r7), r2
    while(*str != '\0' && *str != '\n') {
   a:	5a00 	movi	r5, 0
   c:	6a10 	bz	r5, 34
        *vga = *(str++);
   e:	5200 	movi	r1, 0
  10:	5350 	movhi	r1, 80
  12:	3440 	ld	r2, 0(r1)
  14:	3382 	ld	r1, 4(r6)
  16:	d240 	ldb	r1, 0(r1)
  18:	e280 	stb	0(r2), r1
  1a:	3382 	ld	r1, 4(r6)
  1c:	2241 	addi	r1, r1, 1
  1e:	4382 	st	4(r6), r1
        vga += 2;
  20:	5200 	movi	r1, 0
  22:	5350 	movhi	r1, 80
  24:	3240 	ld	r1, 0(r1)
  26:	2442 	addi	r2, r1, 2
  28:	5200 	movi	r1, 0
  2a:	5350 	movhi	r1, 80
  2c:	4440 	st	0(r1), r2
  2e:	3382 	ld	r1, 4(r6)
  30:	d240 	ldb	r1, 0(r1)
  32:	6205 	bz	r1, 12
  34:	3382 	ld	r1, 4(r6)
  36:	d440 	ldb	r2, 0(r1)
  38:	520a 	movi	r1, 10
  3a:	1299 	cmpeq	r1, r2, r1
  3c:	62e8 	bz	r1, -46
    }
    vga = ' ';
  3e:	5400 	movi	r2, 0
  40:	5550 	movhi	r2, 80
  42:	5220 	movi	r1, 32
  44:	4280 	st	0(r2), r1
    vga += 2;
  46:	5200 	movi	r1, 0
  48:	5350 	movhi	r1, 80
  4a:	3240 	ld	r1, 0(r1)
  4c:	2442 	addi	r2, r1, 2
  4e:	5200 	movi	r1, 0
  50:	5350 	movhi	r1, 80
  52:	4440 	st	0(r1), r2
}
  54:	35c0 	ld	r2, 0(r7)
  56:	3dc1 	ld	r6, 2(r7)
  58:	3bc2 	ld	r5, 4(r7)
  5a:	2fc6 	addi	r7, r7, 6
  5c:	a143 	jmp	r5

0000005e <reverse>:

void reverse(char str[], int length) {
  5e:	2ff2 	addi	r7, r7, -14
  60:	4bc6 	st	12(r7), r5
  62:	4dc5 	st	10(r7), r6
  64:	2dca 	addi	r6, r7, 10
  66:	45c1 	st	2(r7), r2
  68:	47c0 	st	0(r7), r3
    int start = 0;
  6a:	5200 	movi	r1, 0
  6c:	43bd 	st	-6(r6), r1
    int end = length - 1;
  6e:	3383 	ld	r1, 6(r6)
  70:	227f 	addi	r1, r1, -1
  72:	43be 	st	-4(r6), r1
    while (start < end) {
  74:	5a00 	movi	r5, 0
  76:	6a18 	bz	r5, 50
        // Swap characters
        char temp = str[start];
  78:	35bd 	ld	r2, -6(r6)
  7a:	3382 	ld	r1, 4(r6)
  7c:	02a1 	add	r1, r2, r1
  7e:	d240 	ldb	r1, 0(r1)
  80:	e3bf 	stb	-1(r6), r1
        str[start] = str[end];
  82:	35bd 	ld	r2, -6(r6)
  84:	3382 	ld	r1, 4(r6)
  86:	06a1 	add	r3, r2, r1
  88:	35be 	ld	r2, -4(r6)
  8a:	3382 	ld	r1, 4(r6)
  8c:	02a1 	add	r1, r2, r1
  8e:	d240 	ldb	r1, 0(r1)
  90:	e2c0 	stb	0(r3), r1
        str[end] = temp;
  92:	35be 	ld	r2, -4(r6)
  94:	3382 	ld	r1, 4(r6)
  96:	04a1 	add	r2, r2, r1
  98:	d3bf 	ldb	r1, -1(r6)
  9a:	e280 	stb	0(r2), r1
        start++;
  9c:	33bd 	ld	r1, -6(r6)
  9e:	2241 	addi	r1, r1, 1
  a0:	43bd 	st	-6(r6), r1
        end--;
  a2:	33be 	ld	r1, -4(r6)
  a4:	227f 	addi	r1, r1, -1
  a6:	43be 	st	-4(r6), r1
  a8:	33bd 	ld	r1, -6(r6)
  aa:	35be 	ld	r2, -4(r6)
  ac:	1242 	cmplt	r1, r1, r2
  ae:	63e4 	bnz	r1, -54
    }
}
  b0:	35c1 	ld	r2, 2(r7)
  b2:	37c0 	ld	r3, 0(r7)
  b4:	3dc5 	ld	r6, 10(r7)
  b6:	3bc6 	ld	r5, 12(r7)
  b8:	2fce 	addi	r7, r7, 14
  ba:	a143 	jmp	r5

000000bc <itoa>:

char* itoa(int num, char* str) {
  bc:	2ff0 	addi	r7, r7, -16
  be:	4bc7 	st	14(r7), r5
  c0:	4dc6 	st	12(r7), r6
  c2:	2dcc 	addi	r6, r7, 12
  c4:	45c1 	st	2(r7), r2
  c6:	47c0 	st	0(r7), r3
    int i = 0;
  c8:	5200 	movi	r1, 0
  ca:	43bd 	st	-6(r6), r1
    int isNegative = 0;
  cc:	5200 	movi	r1, 0
  ce:	43be 	st	-4(r6), r1
    if (num == 0) {
  d0:	3382 	ld	r1, 4(r6)
  d2:	6312 	bnz	r1, 38
        str[i++] = '0';
  d4:	35bd 	ld	r2, -6(r6)
  d6:	3383 	ld	r1, 6(r6)
  d8:	04a1 	add	r2, r2, r1
  da:	5230 	movi	r1, 48
  dc:	e280 	stb	0(r2), r1
  de:	33bd 	ld	r1, -6(r6)
  e0:	2241 	addi	r1, r1, 1
  e2:	43bd 	st	-6(r6), r1
        str[i] = '\0';
  e4:	35bd 	ld	r2, -6(r6)
  e6:	3383 	ld	r1, 6(r6)
  e8:	04a1 	add	r2, r2, r1
  ea:	5200 	movi	r1, 0
  ec:	e280 	stb	0(r2), r1
        return str;
  ee:	3383 	ld	r1, 6(r6)
  f0:	43bc 	st	-8(r6), r1
  f2:	5a7a 	movi	r5, 122
  f4:	5b01 	movhi	r5, 1
  f6:	a143 	jmp	r5
    }
    if (num < 0) {
  f8:	3382 	ld	r1, 4(r6)
  fa:	5400 	movi	r2, 0
  fc:	1242 	cmplt	r1, r1, r2
  fe:	6220 	bz	r1, 66
        isNegative = 1;
 100:	5201 	movi	r1, 1
 102:	43be 	st	-4(r6), r1
        num = -num;
 104:	3782 	ld	r3, 4(r6)
 106:	06d8 	not	r3, r3
 108:	26c1 	addi	r3, r3, 1
 10a:	4782 	st	4(r6), r3
    }
    while (num != 0) {
 10c:	5a00 	movi	r5, 0
 10e:	6a18 	bz	r5, 50
        int rem = num % 10;
 110:	3782 	ld	r3, 4(r6)
 112:	520a 	movi	r1, 10
 114:	82e1 	div	r1, r3, r1
 116:	0261 	add	r1, r1, r1
 118:	5402 	movi	r2, 2
 11a:	0472 	sha	r2, r1, r2
 11c:	0262 	add	r1, r1, r2
 11e:	24c0 	addi	r2, r3, 0
 120:	02a9 	sub	r1, r2, r1
 122:	43bf 	st	-2(r6), r1
        str[i++] = rem + '0';
 124:	35bd 	ld	r2, -6(r6)
 126:	3383 	ld	r1, 6(r6)
 128:	04a1 	add	r2, r2, r1
 12a:	33bf 	ld	r1, -2(r6)
 12c:	5630 	movi	r3, 48
 12e:	0263 	add	r1, r1, r3
 130:	e280 	stb	0(r2), r1
 132:	33bd 	ld	r1, -6(r6)
 134:	2241 	addi	r1, r1, 1
 136:	43bd 	st	-6(r6), r1
        num = num / 10;
 138:	3582 	ld	r2, 4(r6)
 13a:	520a 	movi	r1, 10
 13c:	82a1 	div	r1, r2, r1
 13e:	4382 	st	4(r6), r1
 140:	3382 	ld	r1, 4(r6)
 142:	63e6 	bnz	r1, -50
    }
    if (isNegative) {
 144:	33be 	ld	r1, -4(r6)
 146:	6208 	bz	r1, 18
        str[i++] = '-';
 148:	35bd 	ld	r2, -6(r6)
 14a:	3383 	ld	r1, 6(r6)
 14c:	04a1 	add	r2, r2, r1
 14e:	522d 	movi	r1, 45
 150:	e280 	stb	0(r2), r1
 152:	33bd 	ld	r1, -6(r6)
 154:	2241 	addi	r1, r1, 1
 156:	43bd 	st	-6(r6), r1
    }
    str[i] = '\0';
 158:	35bd 	ld	r2, -6(r6)
 15a:	3383 	ld	r1, 6(r6)
 15c:	04a1 	add	r2, r2, r1
 15e:	5200 	movi	r1, 0
 160:	e280 	stb	0(r2), r1
    reverse(str, i);
 162:	2ffc 	addi	r7, r7, -4
 164:	25c0 	addi	r2, r7, 0
 166:	3383 	ld	r1, 6(r6)
 168:	4280 	st	0(r2), r1
 16a:	33bd 	ld	r1, -6(r6)
 16c:	4281 	st	2(r2), r1
 16e:	525e 	movi	r1, 94
 170:	5300 	movhi	r1, 0
 172:	aa44 	jal	r5, r1
 174:	2fc4 	addi	r7, r7, 4
    return str;
 176:	3383 	ld	r1, 6(r6)
 178:	43bc 	st	-8(r6), r1
 17a:	33bc 	ld	r1, -8(r6)
}
 17c:	35c1 	ld	r2, 2(r7)
 17e:	37c0 	ld	r3, 0(r7)
 180:	3dc6 	ld	r6, 12(r7)
 182:	3bc7 	ld	r5, 14(r7)
 184:	2fd0 	addi	r7, r7, 16
 186:	a143 	jmp	r5

00000188 <umain>:

__attribute__((noreturn)) void umain() {
 188:	2fe0 	addi	r7, r7, -32
 18a:	4bcf 	st	30(r7), r5
 18c:	4dce 	st	28(r7), r6
 18e:	2ddc 	addi	r6, r7, 28
 190:	2ff4 	addi	r7, r7, -12
 192:	45c1 	st	2(r7), r2
 194:	47c0 	st	0(r7), r3
    int t = -1;
 196:	52ff 	movi	r1, -1
 198:	43be 	st	-4(r6), r1
    char buff[32];
    int i;
    getTicks(&t);
 19a:	2ffe 	addi	r7, r7, -2
 19c:	25c0 	addi	r2, r7, 0
 19e:	23bc 	addi	r1, r6, -4
 1a0:	4280 	st	0(r2), r1
 1a2:	52dc 	movi	r1, -36
 1a4:	5301 	movhi	r1, 1
 1a6:	aa44 	jal	r5, r1
 1a8:	2fc2 	addi	r7, r7, 2
    t = 1000;
 1aa:	52e8 	movi	r1, -24
 1ac:	5303 	movhi	r1, 3
 1ae:	43be 	st	-4(r6), r1
    itoa(t, buff);
 1b0:	33be 	ld	r1, -4(r6)
 1b2:	2ffc 	addi	r7, r7, -4
 1b4:	25c0 	addi	r2, r7, 0
 1b6:	4280 	st	0(r2), r1
 1b8:	56dc 	movi	r3, -36
 1ba:	03a3 	add	r1, r6, r3
 1bc:	4281 	st	2(r2), r1
 1be:	52bc 	movi	r1, -68
 1c0:	5300 	movhi	r1, 0
 1c2:	aa44 	jal	r5, r1
 1c4:	2fc4 	addi	r7, r7, 4
    printu(buff);
 1c6:	2ffe 	addi	r7, r7, -2
 1c8:	25c0 	addi	r2, r7, 0
 1ca:	56dc 	movi	r3, -36
 1cc:	03a3 	add	r1, r6, r3
 1ce:	4280 	st	0(r2), r1
 1d0:	5200 	movi	r1, 0
 1d2:	5300 	movhi	r1, 0
 1d4:	aa44 	jal	r5, r1
 1d6:	2fc2 	addi	r7, r7, 2
    for (;;);
 1d8:	5a00 	movi	r5, 0
 1da:	6afe 	bz	r5, -2

000001dc <getTicks>:
 1dc:	2ffe 	addi	r7, r7, -2
 1de:	41c0 	st	0(r7), r0
 1e0:	5000 	movi	r0, 0
 1e2:	a007 	calls	r0
 1e4:	31c0 	ld	r0, 0(r7)
 1e6:	2fc2 	addi	r7, r7, 2
 1e8:	a183 	jmp	r6

000001ea <getKey>:
 1ea:	2ffe 	addi	r7, r7, -2
 1ec:	41c0 	st	0(r7), r0
 1ee:	5001 	movi	r0, 1
 1f0:	a007 	calls	r0
 1f2:	31c0 	ld	r0, 0(r7)
 1f4:	2fc2 	addi	r7, r7, 2
 1f6:	a183 	jmp	r6
Disassembly of section .system:

0000c000 <__entry_point>:
    c000:	5e00 	movi	r7, 0
    c002:	5f90 	movhi	r7, -112
    c004:	5a0e 	movi	r5, 14
    c006:	5bc0 	movhi	r5, -64
    c008:	5cd2 	movi	r6, -46
    c00a:	5dc0 	movhi	r6, -64
    c00c:	a183 	jmp	r6

0000c00e <hlt>:
    c00e:	ffff 	halt	

0000c010 <RSI_default_resume>:
    c010:	a183 	jmp	r6

0000c012 <RSE_default_halt>:
    c012:	ffff 	halt	

0000c014 <RSE_default_resume>:
    c014:	a183 	jmp	r6

0000c016 <RSE_excepcion_TLB>:
    c016:	f46c 	rds	r2, s1
    c018:	24be 	addi	r2, r2, -2
    c01a:	f2b0 	wrs	s1, r2
    c01c:	a183 	jmp	r6

0000c01e <RSG>:
    c01e:	2ff2 	addi	r7, r7, -14
    c020:	41c6 	st	12(r7), r0
    c022:	43c5 	st	10(r7), r1
    c024:	45c4 	st	8(r7), r2
    c026:	47c3 	st	6(r7), r3
    c028:	49c2 	st	4(r7), r4
    c02a:	4bc1 	st	2(r7), r5
    c02c:	4dc0 	st	0(r7), r6
    c02e:	5038 	movi	r0, 56
    c030:	5190 	movhi	r0, -112
    c032:	4e00 	st	0(r0), r7
    c034:	503a 	movi	r0, 58
    c036:	5190 	movhi	r0, -112
    c038:	3e00 	ld	r7, 0(r0)
    c03a:	f22c 	rds	r1, s0
    c03c:	f46c 	rds	r2, s1
    c03e:	f6ec 	rds	r3, s3
    c040:	2ffa 	addi	r7, r7, -6
    c042:	43c2 	st	4(r7), r1
    c044:	45c1 	st	2(r7), r2
    c046:	47c0 	st	0(r7), r3
    c048:	f2ac 	rds	r1, s2
    c04a:	540e 	movi	r2, 14
    c04c:	165a 	cmpeq	r3, r1, r2
    c04e:	670a 	bnz	r3, 22
    c050:	540f 	movi	r2, 15
    c052:	165a 	cmpeq	r3, r1, r2
    c054:	6711 	bnz	r3, 36

0000c056 <__excepcion>:
    c056:	5408 	movi	r2, 8
    c058:	5590 	movhi	r2, -112
    c05a:	0261 	add	r1, r1, r1
    c05c:	04a1 	add	r2, r2, r1
    c05e:	3480 	ld	r2, 0(r2)
    c060:	ac84 	jal	r6, r2
    c062:	6611 	bz	r3, 36

0000c064 <__call_sistema>:
    c064:	f2ec 	rds	r1, s3
    c066:	5407 	movi	r2, 7
    c068:	0242 	and	r1, r1, r2
    c06a:	0261 	add	r1, r1, r1
    c06c:	5424 	movi	r2, 36
    c06e:	5590 	movhi	r2, -112
    c070:	04a1 	add	r2, r2, r1
    c072:	3480 	ld	r2, 0(r2)
    c074:	ac84 	jal	r6, r2
    c076:	6707 	bnz	r3, 16

0000c078 <__interrupcion>:
    c078:	f228 	getiid	r1
    c07a:	0261 	add	r1, r1, r1
    c07c:	5400 	movi	r2, 0
    c07e:	5590 	movhi	r2, -112
    c080:	04a1 	add	r2, r2, r1
    c082:	3480 	ld	r2, 0(r2)
    c084:	ac84 	jal	r6, r2

0000c086 <__finRSG>:
    c086:	37c0 	ld	r3, 0(r7)
    c088:	35c1 	ld	r2, 2(r7)
    c08a:	33c2 	ld	r1, 4(r7)
    c08c:	2fc6 	addi	r7, r7, 6
    c08e:	f6f0 	wrs	s3, r3
    c090:	f2b0 	wrs	s1, r2
    c092:	f070 	wrs	s0, r1
    c094:	5038 	movi	r0, 56
    c096:	5190 	movhi	r0, -112
    c098:	3e00 	ld	r7, 0(r0)
    c09a:	3dc0 	ld	r6, 0(r7)
    c09c:	3bc1 	ld	r5, 2(r7)
    c09e:	39c2 	ld	r4, 4(r7)
    c0a0:	37c3 	ld	r3, 6(r7)
    c0a2:	35c4 	ld	r2, 8(r7)
    c0a4:	33c5 	ld	r1, 10(r7)
    c0a6:	31c6 	ld	r0, 12(r7)
    c0a8:	2fce 	addi	r7, r7, 14
    c0aa:	f024 	reti	

0000c0ac <RSI__interrup_timer>:
    c0ac:	5836 	movi	r4, 54
    c0ae:	5990 	movhi	r4, -112
    c0b0:	3700 	ld	r3, 0(r4)
    c0b2:	26c1 	addi	r3, r3, 1
    c0b4:	4700 	st	0(r4), r3
    c0b6:	7706 	out	6, r3
    c0b8:	a183 	jmp	r6

0000c0ba <RSI__interrup_keyboard>:
    c0ba:	760f 	in	r3, 15
    c0bc:	5834 	movi	r4, 52
    c0be:	5990 	movhi	r4, -112
    c0c0:	4700 	st	0(r4), r3
    c0c2:	a183 	jmp	r6

0000c0c4 <getTics_call>:
    c0c4:	5836 	movi	r4, 54
    c0c6:	5990 	movhi	r4, -112
    c0c8:	3700 	ld	r3, 0(r4)
    c0ca:	5038 	movi	r0, 56
    c0cc:	5190 	movhi	r0, -112
    c0ce:	4610 	st	32(r0), r3
    c0d0:	a183 	jmp	r6

0000c0d2 <kmain>:
    c0d2:	2ff2 	addi	r7, r7, -14
    c0d4:	4bc6 	st	12(r7), r5
    c0d6:	4dc5 	st	10(r7), r6
    c0d8:	2dca 	addi	r6, r7, 10
    c0da:	41c3 	st	6(r7), r0
    c0dc:	45c2 	st	4(r7), r2
    c0de:	47c1 	st	2(r7), r3
    c0e0:	49c0 	st	0(r7), r4
    c0e2:	5288 	movi	r1, -120
    c0e4:	5301 	movhi	r1, 1
    c0e6:	43bf 	st	-2(r6), r1
    c0e8:	5802 	movi	r4, 2
    c0ea:	31bf 	ld	r0, -2(r6)
    c0ec:	560e 	movi	r3, 14
    c0ee:	5400 	movi	r2, 0
    c0f0:	521e 	movi	r1, 30
    c0f2:	53c0 	movhi	r1, -64
    c0f4:	f130 	wrs	s0, r4
    c0f6:	f230 	wrs	s1, r0
    c0f8:	f4f0 	wrs	s2, r3
    c0fa:	f6b0 	wrs	s3, r2
    c0fc:	fa70 	wrs	s5, r1
    c0fe:	503a 	movi	r0, 58
    c100:	5190 	movhi	r0, -112
    c102:	4e00 	st	0(r0), r7
    c104:	5e00 	movi	r7, 0
    c106:	5f50 	movhi	r7, 80
    c108:	f024 	reti	
    c10a:	5a00 	movi	r5, 0
    c10c:	6afe 	bz	r5, -2

0000c10e <copy_to_user>:
#include "kernel_utils.h"

void copy_to_user(void *sys, void *usr, int size) {
    c10e:	2ff8 	addi	r7, r7, -8
    c110:	4bc3 	st	6(r7), r5
    c112:	4dc2 	st	4(r7), r6
    c114:	2dc4 	addi	r6, r7, 4
    c116:	45c0 	st	0(r7), r2
    int i;
    for(i = 0; i < size; i++) {
    c118:	5200 	movi	r1, 0
    c11a:	43bf 	st	-2(r6), r1
    c11c:	5a00 	movi	r5, 0
    c11e:	6a07 	bz	r5, 16
        *(char *)usr = *(char *)sys;
    c120:	3583 	ld	r2, 6(r6)
    c122:	3382 	ld	r1, 4(r6)
    c124:	d240 	ldb	r1, 0(r1)
    c126:	e280 	stb	0(r2), r1
    c128:	33bf 	ld	r1, -2(r6)
    c12a:	2241 	addi	r1, r1, 1
    c12c:	43bf 	st	-2(r6), r1
    c12e:	33bf 	ld	r1, -2(r6)
    c130:	3584 	ld	r2, 8(r6)
    c132:	1242 	cmplt	r1, r1, r2
    c134:	63f5 	bnz	r1, -20
    }
}
    c136:	35c0 	ld	r2, 0(r7)
    c138:	3dc2 	ld	r6, 4(r7)
    c13a:	3bc3 	ld	r5, 6(r7)
    c13c:	2fc8 	addi	r7, r7, 8
    c13e:	a143 	jmp	r5
